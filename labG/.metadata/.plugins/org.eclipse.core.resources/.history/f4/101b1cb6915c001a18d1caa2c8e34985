/*
 * Copyright 2016-2020 NXP
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of NXP Semiconductor, Inc. nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
/**
 * @file    Lab G.c
 * @brief   Application entry point.
 */
#include "LPC802.h"
#include "clock_config.h" // for BOARD_BootClockFRO30M(), etc.



#define LED_USER1 (8) 				// Blue LED (LD19 LD20)
#define LED_USER2 (9) 				// Green LED (LD21 and LD22; and LD5)
#define MRT_REPEAT (0) 				// Repeat mode for MRT
#define MRT_ONESHOT (1) 			// One shot mode for MRT
#define MRT_ONESHOT_Bus_Stall (2)	// One shot + bus stall mode for MRT
#define MRT_GFLAG0 (0)				// IRQ Flag 0 (channel 0)
#define MRT_GFLAG1 (1)				// IRQ Flag 1 (channel 1)

#define MRT_CHAN0 (0)				// channel 0 on MRT
#define MRT_CHAN1 (1)				// channel 1 on MRT
#define IVALUE_CH0 (60000000)		// [counts] value FRO_Freq * (IRQ desired period)
#define IVALUE_CH1 (120000000)		// [counts] value FRO_Freq * (IRQ desired period)

/*
 * @brief   Application entry point.
 */
int main(void) {

    while(1) {
        /* 'Dummy' NOP to allow source level single stepping of
            tight while() loop */
        __asm ("nop");
    }
    return 0 ;
}
